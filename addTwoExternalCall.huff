#define function addTwo(uint256, uint256) view returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
  // Getting the function selector
  // ----------------------------------
  0x00                     // Stack : [0x00]
  calldataload             // Load the first 32 bytes into the stack
  0xE0                     // pushes [224] into the stack
  shr                      // shifts right the calldata by 28 bytes --> placing the function selector in the stack

  // Jump to implementation of the ADD_TWO function if calldata matches the function description
  __FUNC_SIG(addTwo) eq addTwo jumpi

  addTwo:
    ADD_TWO()
}

#define macro ADD_TWO() = takes(0) returns(0) {
  0x04 calldataload       // load first 32 bytes into the stack : number1
  0x24 calldataload       // load second 32 bytes into the stack : number2
  add                     // [number1 + number2]

  0x00 mstore             // Stack : [number1 + number2]
  0x20 0x00 return        // <return_memory_size> <memory_offset> return
}
